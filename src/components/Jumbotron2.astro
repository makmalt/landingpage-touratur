---
const { content } = Astro.props;
---

<div
  id="jumbotron-carousel"
  class="relative w-full overflow-hidden"
  data-carousel="slide"
>
  <!-- Carousel wrapper -->
  <div class="relative h-[100vh] rounded-lg bg-black">
    {
      content.map(
        (
          item: {
            bg: string | null | undefined;
            judul: unknown;
            isi: unknown;
            ctaText: unknown;
          },
          index: number,
        ) => (
          <div
            class="hidden duration-700 ease-in-out absolute inset-0"
            data-carousel-item={index === 0 ? "active" : ""}
          >
            <img
              src={item.bg}
              alt="Background Image"
              class="w-full h-full object-cover"
              loading={index === 0 ? "eager" : "lazy"}
            />
            <div class="absolute inset-0 bg-black/1 flex flex-col items-start justify-center text-white text-left px-10 md:px-24">
              <h2 class="text-lg md:text-3xl font-bold font-nunito text-[#f5f5f5] ps-1">
                {item.subjudul}
              </h2>
              <h2 class="text-5xl md:text-7xl font-bold font-nunito text-[#f8f9fa]">
                {item.judul}
              </h2>
              {/* <h3 class="text-2xl font-medium font-nunito text-[#f8f9fa]">
                {item.isi}
              </h3> */}
              <a
                href="https://wa.me/6289509305515?text=Halo%20saya%20mau%20tanya"
                target="_blank"
                class="group flex items-center justify-center py-2 px-5 mb-2 w-42 text-sm font-medium rounded-full border border-white my-2 text-white bg-transparent hover:bg-[whitesmoke] hover:text-black transition-colors duration-300 ps-2"
              >
                {item.ctaText}
              </a>
            </div>
          </div>
        ),
      )
    }
  </div>

  <!-- Indicators -->
  <div class="absolute z-30 flex space-x-3 -translate-x-1/2 bottom-5 left-1/2">
    {
      content.map((_: any, i: number) => (
        <button
          type="button"
          class="w-3 h-3 rounded-full"
          aria-current={i === 0 ? "true" : "false"}
          aria-label={`Slide ${i + 1}`}
          data-carousel-slide-to={i}
        />
      ))
    }
  </div>

  <!-- Controls -->
  <button
    type="button"
    class="absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-prev
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 group-hover:bg-white/50"
    >
      <svg
        class="w-6 h-6 text-white"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"></path></svg
      >
    </span>
  </button>
  <button
    type="button"
    class="absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-next
  >
    <span
      class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 group-hover:bg-white/50"
    >
      <svg
        class="w-6 h-6 text-white"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg
      >
    </span>
  </button>
</div>

<script>
  // Import Flowbite's carousel initialization
  import { Carousel } from "flowbite";

  // Wait for the DOM to be fully loaded
  document.addEventListener("DOMContentLoaded", function () {
    // Get the carousel element
    const carouselElement = document.getElementById("jumbotron-carousel");

    // Check if the carousel element exists
    if (carouselElement) {
      // Initialize the carousel
      const carousel = new Carousel(carouselElement, {
        interval: 5000, // Auto-slide interval in milliseconds
        indicators: true,
        ride: "carousel",
      });
    }
  });
</script>
